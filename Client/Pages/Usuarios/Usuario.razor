@page "/Usuario"
@using Actividad_18.Shared.Models;
@inject NavigationManager a
@inject HttpClient http

<h2>Lista de usuarios</h2>



@if (elusuario == null)
{
    <h4>Cargando...</h4>
}else if (elusuario.Count == 0)
{
    <h4>No existen usuarios</h4>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Telefono</th>
                <th>Correo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var u in elusuario)
            {
                <tr>
                    <td>@u.Id</td>
                    <td>@u.Nombre</td>
                    <td>@u.Apellido</td>
                    <td>@u.Telefono</td>
                    <td>@u.Correo</td>
                    <td>
                        <div>
                            <button class="btn btn-warning" @onclick="(()=>Edit(Convert.ToInt32(u.Id)))">
                                <span class="oi oi-pencil"></span>
                            </button>
                            <button class="btn btn-danger" @onclick="(()=>delet(u))">
                                <span class="oi oi-trash"></span>
                            </button>
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-success" @onclick=nuevousuario><span>Nuevo Usuario</span></button>

@code {
    private List<Usuarios> elusuario = new List<Usuarios>();

    protected override async Task OnInitializedAsync()
    {
        elusuario = await http.GetFromJsonAsync<List<Usuarios>>("api/Usuarios");
    }

    public void nuevousuario()
    {
        a.NavigateTo("/Usuario/Nuevo");
    }
    private void Edit(int i)
    {
        a.NavigateTo($"/Usuario/Edit/{i}");
    }
    public async Task delet(Usuarios user)
    {
        await http.DeleteAsync($"api/Usuarios/{user.Id}");
        elusuario.Remove(user);
    }
}
